import telebot
from telebot import types
import sqlite3
import pandas as pd


bot = telebot.TeleBot('6107680735:AAH9rrQINqK0IDzmxnlBVgVRtn5w5MsSFNw')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ /start
@bot.message_handler(commands=['start'])
def start(message):
    """
    –í—ã–≤–æ–¥ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ /start
    :param message: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :return: None
    """
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è Russian Trip Bot! –Ø —É–º–µ—é –∏—Å–∫–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–µ—Å—Ç–∞ –≤ –≥–æ—Ä–æ–¥–∞—Ö –†–æ—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –º–Ω–µ –Ω–∞–ø–∏—à–µ—à—å üó∫')
    bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –†–æ—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ—Å–µ—Ç–∏—Ç—å.')


# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_db(city):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–æ—Ä–æ–¥–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    :param city: –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    :return: data: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ–¥–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    """
    connect = sqlite3.connect('db.db')
    cursor = connect.cursor()
    query = 'SELECT * FROM trip WHERE city = ?'
    cursor.execute(query, (city,))
    data = cursor.fetchall()
    connect.close()
    return data


# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
def split_db(message, data):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    :param message: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :param data: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ–¥–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    :return: None
    """
    for i in data:
        text = f'<b>{i[2]}</b>\n\n{i[3]}\n\n<i>{i[4]}</i>'
        photo = i[1].split('; ')
        media = [telebot.types.InputMediaPhoto(open(f'{photo[0]}', 'rb'), caption=text, parse_mode='html'), telebot.types.InputMediaPhoto(open(f'{photo[1]}', 'rb')), telebot.types.InputMediaPhoto(open(f'{photo[2]}', 'rb'))]
        bot.send_media_group(message.chat.id, media)
        link = i[5].split('; ')
        markup = types.InlineKeyboardMarkup()
        if len(link) == 2:
            if 'reviews' in link[0] and 'reviews' in link[1]:
                markup.add(types.InlineKeyboardButton('–û—Ç–∑—ã–≤—ã –≤ –Ø–Ω–¥–µ–∫—Å', url=f'{link[0]}'))
                markup.add(types.InlineKeyboardButton('–û—Ç–∑—ã–≤—ã –≤ –Ø–Ω–¥–µ–∫—Å', url=f'{link[1]}'))
                bot.send_message(message.chat.id, '–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Å—ã–ª–æ–∫', reply_markup=markup)
            elif 'reviews' in link[0] and not 'reviews' in link[1]:
                markup.add(types.InlineKeyboardButton('–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç', url=f'{link[1]}'))
                markup.add(types.InlineKeyboardButton('–û—Ç–∑—ã–≤—ã –≤ –Ø–Ω–¥–µ–∫—Å', url=f'{link[0]}'))
                bot.send_message(message.chat.id, '–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Å—ã–ª–æ–∫', reply_markup=markup)
        elif len(link) == 1:
            if '---' in link[0]:
                continue
            elif 'reviews' in link[0]:
                markup.add(types.InlineKeyboardButton('–û—Ç–∑—ã–≤—ã –≤ –Ø–Ω–¥–µ–∫—Å', url=f'{link[0]}'))
                bot.send_message(message.chat.id, '–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Å—ã–ª–æ–∫', reply_markup=markup)
            elif not 'reviews' in link[0]:
                markup.add(types.InlineKeyboardButton('–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç', url=f'{link[0]}'))
                bot.send_message(message.chat.id, '–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Å—ã–ª–æ–∫', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
# –í—ã–≤–æ–¥–∏—Ç 5 –º–µ—Å—Ç (3 –∫–∞—Ä—Ç–∏–Ω–∫–∏, –æ–ø–∏—Å–∞–Ω–∏–µ, –∞–¥—Ä–µ—Å –∏ –∫–Ω–æ–ø–∫—É —Å –æ—Ç–∑—ã–≤–∞–º–∏ –≤ –Ø–Ω–¥–µ–∫—Å–µ + —Å–∞–π—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å))
@bot.message_handler()
def info(message):
    """
    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    :param message: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :return: None
    """
    city = message.text
    data = get_db(city)  # –≤—Å—è –∏–Ω—Ñ–∞ –∏–∑ –±–¥
    url = 'https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%B3%D0%BE%D1%80%D0%BE%D0%B4%D0%BE%D0%B2_%D0%A0%D0%BE%D1%81%D1%81%D0%B8%D0%B8'
    df = pd.read_html(url)[0]
    if city in df.values:
        if not data:
            bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –ø–æ–∫–∞ –Ω–µ—Ç –≤ –º–æ–µ–º —Å–ø–∏—Å–∫–µ üòî –ù–æ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –º—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏–º üòâ')
        else:
            bot.send_message(message.chat.id, f'–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–µ—Å—Ç –≥–æ—Ä–æ–¥–∞ <u>{city}</u>:', parse_mode='html')
            split_db(message, data)
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ ü´£')


bot.polling(none_stop=True)
